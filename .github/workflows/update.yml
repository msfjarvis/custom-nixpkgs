on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to check updates for'
        required: false
      version:
        description: 'Version to pin package to'
        required: false

name: Check for package updates
jobs:
  check-nix-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@07ebb8d2749aa2fac2baae7d1cfa011e4acfd8d1 # v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        extra-conf: |
          trusted-substituters = https://cache.nixos.org https://nix-community.cachix.org https://cache.garnix.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g=    

    - name: Set Git user and email
      run: |
        git config user.name "GitHub Actions"
        git config user.email noreply@github.com

    - name: Check pre-update Git ref
      run: |
        echo "OLD_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"

    - name: Check for updates of given package
      if: "github.event.inputs.package != null"
      run: nix-shell -p nix-update git --run './update.sh ${{ github.event.inputs.package }} ${{ github.event.inputs.version }}'

    - name: Check for updates
      if: "github.event.inputs.package == null"
      run: nix-shell -p nix-update git --run ./update.sh

    - name: Check post-update Git ref
      run: |
        echo "NEW_REF=$(git rev-parse HEAD)" >> "$GITHUB_ENV"

    - name: Push to main branch
      if: env.OLD_REF != env.NEW_REF
      shell: bash
      run: |
        git push origin main
